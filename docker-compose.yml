version: "3.8"

networks:
  proxyai_internal:
    driver: bridge

secrets:
  huggingface_token:
    external: true

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxyai-api
    restart: unless-stopped
    networks:
      - proxyai_internal
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    env_file: .env
    secrets:
      - huggingface_token
    volumes:
      - upload-data:/tmp/uploads
      - results-data:/tmp/results
    ports:
      - "8000:8000"
    command: >
      uvicorn main:app
      --host ${FASTAPI_HOST}
      --port ${FASTAPI_PORT}
      --workers ${API_WORKERS}

  cpu-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxyai-cpu-worker
    restart: unless-stopped
    networks:
      - proxyai_internal
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file: .env
    secrets:
      - huggingface_token
    volumes:
      - upload-data:/tmp/uploads
      - results-data:/tmp/results
      - diarizer-cache:/tmp/diarizer_cache
    depends_on:
      - redis
    command: >
      celery -A celery_app worker
      --loglevel=info
      --concurrency ${CPU_CONCURRENCY}
      --hostname cpu-worker
      --queues preprocess_cpu

  gpu-worker:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    container_name: proxyai-gpu-worker
    restart: unless-stopped
    networks:
      - proxyai_internal
    healthcheck:
      test: ["CMD", "celery", "-A", "celery_app", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    env_file: .env
    secrets:
      - huggingface_token
    volumes:
      - upload-data:/tmp/uploads
      - results-data:/tmp/results
      - /path/to/hf_cache_host:/hf_cache:rw
      - ctranslate2-cache:/root/.cache/ctranslate2
    depends_on:
      - redis
    runtime: nvidia
    command: >
      celery -A celery_app worker
      --loglevel=info
      --concurrency ${GPU_CONCURRENCY}
      --hostname gpu-worker
      --queues preprocess_gpu

  flower:
    image: mher/flower
    container_name: proxyai-flower
    restart: unless-stopped
    networks:
      - proxyai_internal
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  redis:
    image: redis:7-alpine
    container_name: proxyai-redis
    restart: unless-stopped
    networks:
      - proxyai_internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"

  tusd:
    image: tusproject/tusd:latest
    container_name: proxyai-tusd
    restart: unless-stopped
    networks:
      - proxyai_internal
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:1080/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - upload-data:/data
    ports:
      - "1080:1080"
    command:
      - tusd
      - --host=0.0.0.0
      - --port=1080
      - --dir=/data

volumes:
  upload-data:
  results-data:
  diarizer-cache:
  ctranslate2-cache:
  redis-data: