version: "3.8"

services:
  redis:
    image: redis:7-alpine
    restart: always

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: .env
    environment:
      - MPLCONFIGDIR=/tmp/.config/matplotlib
    user: "1000:1000"
    volumes:
      - upload-data:/tmp/uploads
      - ./static:/app/static
    ports:
      - "8000:8000"
    depends_on:
      - redis

  cpu-worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: .env
    user: "1000:1000"
    volumes:
      - upload-data:/tmp/uploads
    depends_on:
      - redis
    command: celery -A celery_app.app worker \
      --loglevel=info \
      --concurrency=${CELERY_CONCURRENCY} \
      --queues preprocess_cpu

  gpu-worker:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    restart: always
    env_file: .env
    user: "1000:1000"
    volumes:
      - upload-data:/tmp/uploads
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          memory: 4g

        reservations:
            devices:
              - driver: nvidia
                count: 1
                capabilities: [ gpu ]
    command: celery -A celery_app.app worker \
      --loglevel=info \
      --concurrency=1 \
      --queues preprocess_gpu

  flower:
    image: mher/flower:0.9.7
    restart: always
    env_file: .env
    environment:
      - BROKER_URL=${CELERY_BROKER_URL}
    ports:
      - "5555:5555"
    depends_on:
      - redis

volumes:
  upload-data: