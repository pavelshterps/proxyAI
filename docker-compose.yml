version: '3.8'

services:
  redis:
    image: redis:6
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:13
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  tusd:
    image: tusproject/tusd:latest
    command:
      - "--base-path"
      - "/files"
      - "--upload-dir"
      - "/data"
    ports:
      - "1080:1080"
    volumes:
      - uploads:/data
    depends_on:
      - redis
      - postgres

  api:
    build: .
    # включаем NVIDIA runtime для доступа к GPU внутри контейнера
    runtime: nvidia
    deploy:
          resources:
            reservations:
              devices:
                - driver: nvidia
                  count: all
                  capabilities: [ gpu ]
        # if you need a hard memory cap in classic compose:
    #    mem_limit: 2g
    environment:

      - WHISPER_DEVICE=cuda
      - WHISPER_COMPUTE_TYPE=int8

    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${FASTAPI_PORT}/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    command:
      uvicorn main:app
      --host ${FASTAPI_HOST}
      --port ${FASTAPI_PORT}
      --workers ${API_WORKERS}
    ports:
      - "${FASTAPI_PORT}:${FASTAPI_PORT}"
    depends_on:
      - redis
      - postgres
      - tusd

  worker:
    build: .
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    env_file:
      - .env
    command: celery -A celery_app worker --loglevel=info
    depends_on:
      - redis
      - postgres
      - api

  beat:
    build: .
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
    env_file:
      - .env
    command: celery -A celery_app beat --loglevel=info
    depends_on:
      - redis
      - postgres
      - api

volumes:
  pgdata:
  uploads:
