version: "3.8"

services:
  tusd:
    image: tus/tusd:alpine
    ports:
      - "1080:1080"
    command:
      - "/tusd"
      - "server"
      - "--behind-proxy"
      - "--upload-dir"
      - "/files"
    volumes:
      - upload-data:/files
  redis:
    image: redis:7-alpine

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${FASTAPI_PORT:-8000}:8000"
    env_file:
      - .env
    environment:
      - UPLOAD_FOLDER=/tmp/uploads
      - CELERY_BROKER_URL=redis://redis:6379
      - CELERY_RESULT_BACKEND=redis://redis:6379
    volumes:
      - upload-data:/tmp/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/docs || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5

  cpu-worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - hf_cache:/hf_cache
      - upload-data:/tmp/uploads
    command: celery \
      -A celery_app.celery_app worker \
      --loglevel=info \
      --concurrency=${WORKER_CPU_CONCURRENCY:-4} \
      -Q preprocess_cpu
    depends_on:
      - redis

  gpu-worker:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    env_file:
      - .env
    volumes:
      - hf_cache:/hf_cache
      - upload-data:/tmp/uploads
    command: celery \
      -A celery_app.celery_app worker \
      --loglevel=info \
      --concurrency=${WORKER_GPU_CONCURRENCY:-1} \
      -Q preprocess_gpu
    depends_on:
      - redis

  flower:
    image: mher/flower:latest
    command: >
      celery -A celery_app.celery_app flower
      --port=5555
      --broker=${CELERY_BROKER_URL}
    ports:
      - "5555:5555"
    environment:
      env_file: .env
    depends_on:
      - redis

  # === сюда добавляем наш тестовый сервис ===
  integration-test:
    image: python:3.10-slim
    depends_on:
      api:
        condition: service_healthy
    working_dir: /app
    volumes:
      - .:/app:cached
    environment:
      env_file: .env
      API_URL: "http://api:8000"
    entrypoint: ["pytest", "-q", "--disable-warnings", "--maxfail=1", "tests/test_integration.py"]
    # После завершения теста контейнер выкинет exit code 0 или 1, и сам остановится:
    restart: "no"

volumes:
  upload-data:
  hf_cache: