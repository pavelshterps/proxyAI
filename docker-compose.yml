version: "3.8"
services:
  api:
    build: .
    env_file: .env
    ports: ["8000:8000"]
    volumes: ["upload-data:/tmp/uploads", "results-data:/tmp/results"]
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --workers ${API_WORKERS}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
    restart: unless-stopped

  cpu-worker:
    build: .
    env_file: .env
    volumes: ["upload-data:/tmp/uploads", "results-data:/tmp/results", "diarizer-cache:/tmp/diarizer_cache"]
    command: celery -A celery_app worker --loglevel=info --concurrency ${CPU_CONCURRENCY} --queues preprocess_cpu
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "celery"]
      interval: 30s
      timeout: 5s
    restart: unless-stopped

  gpu-worker:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    env_file: .env
    runtime: nvidia
    volumes:
      - upload-data:/tmp/uploads
      - results-data:/tmp/results
      - /path/to/hf_cache_host:/hf_cache:rw
      - ctranslate2-cache:/root/.cache/ctranslate2
    command: celery -A celery_app worker --loglevel=info --concurrency ${GPU_CONCURRENCY} --queues preprocess_gpu
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "celery"]
      interval: 30s
      timeout: 5s
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
    restart: unless-stopped

  flower:
    image: mher/flower:0.9.8
    env_file: .env
    ports: ["5555:5555"]
    command: >
      flower --broker=${CELERY_BROKER_URL}
             --basic_auth=${FLOWER_USER}:${FLOWER_PASS}
             --port=5555
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555"]
      interval: 30s
      timeout: 5s
    restart: unless-stopped

  tusd:
    image: tusproject/tusd:latest
    ports: ["1080:1080"]
    volumes: ["upload-data:/data"]
    command: ["tusd","--host=0.0.0.0","--port=1080","--dir=/data"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1080/files"]
      interval: 30s
      timeout: 5s
    restart: unless-stopped

volumes:
  upload-data:
  results-data:
  diarizer-cache:
  ctranslate2-cache:
  redis-data: