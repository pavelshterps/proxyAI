# docker-compose.yml
version: '3.8'

services:
  redis:
    image: redis:6
    ports:
      - "6380:6379"

  postgres:
    image: postgres:13
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data

  tusd:
    image: tusproject/tusd:latest
    command:
      - "--base-path"
      - "/files"
      - "--upload-dir"
      - "/data"
    ports:
      - "1080:1080"
    volumes:
      - uploads:/data

  api:
    build:
      context: .
      dockerfile: Dockerfile
    image: proxyai-api:latest
    runtime: nvidia
    environment:
      - WHISPER_DEVICE=cuda
      - WHISPER_COMPUTE_TYPE=float16
    env_file: .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${FASTAPI_PORT}/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      uvicorn main:app
      --host ${FASTAPI_HOST}
      --port ${FASTAPI_PORT}
      --workers ${API_WORKERS}
    ports:
      - "${FASTAPI_PORT}:${FASTAPI_PORT}"
    volumes:
      - uploads:/tmp/uploads
    depends_on:
      - redis
      - postgres
      - tusd

  worker:
    image: proxyai-api:latest
    runtime: nvidia
    env_file: .env
    environment:
      - WHISPER_DEVICE=cuda
      - WHISPER_COMPUTE_TYPE=float16
    volumes:
      - uploads:/tmp/uploads
    command: >
      celery -A celery_app.celery worker
      --loglevel=info
      --concurrency ${CELERY_CONCURRENCY}
    depends_on:
      - redis
      - postgres
      - api

  beat:
    image: proxyai-api:latest
    runtime: nvidia
    env_file: .env
    environment:
      - WHISPER_DEVICE=cuda
      - WHISPER_COMPUTE_TYPE=float16
    volumes:
      - uploads:/tmp/uploads
    command: >
      celery -A celery_app.celery beat
      --loglevel=info
    depends_on:
      - redis
      - postgres
      - api

  flower:
    image: mher/flower:latest
    env_file: .env
    environment:
      - BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis
    ports:
      - "5555:5555"

volumes:
  pgdata:
  uploads: