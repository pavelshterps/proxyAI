version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxyai-api
    env_file: .env
    volumes:
      - upload-data:/tmp/uploads
      - results-data:/tmp/results
    depends_on:
      - redis
      - tusd
    ports:
      - "${API_PORT:-8000}:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-8000}/healthz"]
      interval: 15s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    command: >
      uvicorn main:app --host 0.0.0.0 --port ${API_PORT:-8000} --workers ${API_WORKERS}

  cpu-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proxyai-cpu-worker
    env_file: .env
    volumes:
      - upload-data:/tmp/uploads
      - results-data:/tmp/results
      - diarizer-cache:/tmp/diarizer_cache
    depends_on:
      - redis
    restart: unless-stopped
    command: >
      celery -A celery_app worker
        --loglevel=info
        --concurrency ${CPU_CONCURRENCY}
        --hostname cpu-worker
        --queues preprocess_cpu

  gpu-worker:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    container_name: proxyai-gpu-worker
    env_file: .env
    volumes:
      - upload-data:/tmp/uploads
      - results-data:/tmp/results
      - /path/to/hf_cache_host:/hf_cache:rw
      - ctranslate2-cache:/root/.cache/ctranslate2
    depends_on:
      - redis
    runtime: nvidia
    restart: unless-stopped
    command: >
      celery -A celery_app worker
        --loglevel=info
        --concurrency ${GPU_CONCURRENCY}
        --hostname gpu-worker
        --queues preprocess_gpu

  flower:
    image: mher/flower:latest
    container_name: proxyai-flower
    env_file: .env
    ports:
      - "${FLOWER_PORT:-5555}:5555"
    depends_on:
      - redis
    restart: unless-stopped
    command: >
      celery -A celery_app flower
        --basic_auth=${FLOWER_USER}:${FLOWER_PASS}

  redis:
    image: redis:7-alpine
    container_name: proxyai-redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  tusd:
    image: tusproject/tusd:latest
    container_name: proxyai-tusd
    restart: unless-stopped
    ports:
      - "1080:1080"
    command:
      - tusd
      - --host=0.0.0.0
      - --port=1080
      - --dir=/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1080/files"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - upload-data:/data

volumes:
  upload-data:
  results-data:
  diarizer-cache:
  ctranslate2-cache:
  redis-data: