version: '3.8'

x-common-env: &common-env
  UPLOAD_FOLDER: /files
  HF_CACHE_DIR: /hf_cache
  BROKER_URL: redis://redis:6379/0
  RESULT_BACKEND: redis://redis:6379/1
  PYANNOTE_MODEL: pyannote/speaker-diarization
  WHISPER_MODEL: faster-whisper-small
  DEVICE_TYPE: cuda
  COMPUTE_TYPE: float16
  CPU_CONCURRENCY: 4
  GPU_CONCURRENCY: 1

services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped

  tusd:
    image: tusproject/tusd:v1.2.0
    restart: unless-stopped
    ports:
      - 1080:1080
    command:
      - tusd
      - -host
      - 0.0.0.0
      - -port
      - "1080"
      - -base-path
      - /files/
    volumes:
      - upload-data:/files

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - tusd
    environment:
      <<: *common-env
      FASTAPI_HOST: 0.0.0.0
      FASTAPI_PORT: "8000"
      API_WORKERS: "1"
    ports:
      - "8000:8000"
    volumes:
      - upload-data:/files
      - hf_cache:/hf_cache

  cpu-worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - api
      - redis
    environment:
      <<: *common-env
    command: >
      celery -A celery_app app worker
      --loglevel=info
      -Q preprocess_cpu
      --concurrency=${CPU_CONCURRENCY}

  gpu-worker:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    restart: unless-stopped
    depends_on:
      - api
      - redis
    runtime: nvidia
    environment:
      <<: *common-env
    command: >
      celery -A celery_app app worker
      --loglevel=info
      -Q preprocess_gpu
      --concurrency=${GPU_CONCURRENCY}

  flower:
    image: mher/flower:0.9.7
    restart: unless-stopped
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=${BROKER_URL}
    command: >
      flower
      --address=0.0.0.0
      --port=5555

volumes:
  upload-data:
  hf_cache: