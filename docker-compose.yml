version: "3.8"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - redis
      - tusd

  cpu-worker:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: >
      celery -A celery_app
      worker --loglevel=info
      --concurrency ${CELERY_CONCURRENCY}
      --hostname cpu-worker
      --queues preprocess_cpu
    depends_on:
      - redis

  gpu-worker:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    env_file:
      - .env
    deploy:
      resources:
        limits:
          memory: 4g
    runtime: nvidia
    command: >
      celery -A celery_app
      worker --loglevel=info
      --concurrency ${GPU_CONCURRENCY}
      --hostname gpu-worker
      --queues preprocess_gpu
    depends_on:
      - redis

  redis:
    image: redis:7-alpine
    container_name: proxyai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  tusd:
    image: tusproject/tusd:latest
    container_name: proxyai-tusd
    restart: unless-stopped
    ports:
      - "1080:1080"
    command:
      - tusd
      - --host=0.0.0.0
      - --port=1080
      - --dir=/data
    volumes:
      - upload-data:/data

  flower:
      image: mher/flower:latest
      container_name: proxyai-flower
      restart: unless-stopped
      env_file:
        - .env
      ports:
        - "5555:5555"
      command: >
        flower
        --app=celery_app.celery_app
        --broker=${CELERY_BROKER_URL}
        --port=5555

volumes:
  upload-data:
  redis-data:
  hf_cache: